@model InkInc.Models.Parlor

@using InkInc.Models
@using Microsoft.AspNetCore.Identity

@inject UserManager<User> UserManager
@inject SignInManager<User> SignInManager

@{
    ViewData["Title"] = "Details";
}

@{ var currentUser = await UserManager.GetUserAsync(User);}

@if (SignInManager.IsSignedIn(User) && Model.Users.Contains(currentUser))
{
    <td>
        <a asp-action="Edit" asp-route-id="@Model.ParlorId">Edit Parlor</a>
    </td>
}

<h1>@Html.DisplayFor(model => model.Name)</h1>

<div>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.FullAddress)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.FullAddress)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Hours)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Hours)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.PhoneNumber)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.PhoneNumber)
        </dd>
    </dl>
</div>
@if (Model.Users != null)
{
    <h4>
        Our Artists
    </h4>

    <table class="table">
        @foreach (var item in Model.Users)
        {
            <tr>
                <td>
                    <a asp-controller="Users" asp-action="Details" asp-route-id="@item.Id">@item.FullName</a>
                </td>
            </tr>
        }
    </table>
}
<div>
    <a asp-action="Index">Back to List</a>
</div>

